{"version":3,"sources":["js/getWeather.js","js/displayInfo.js","index.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["API_KEY","getCityData","city","lat","long","url","Promise","res","err","fetch","then","response","json","catch","getCityInfo","displayData","console","log","displayTime","time","dateArr","monthArr","hr","getHours","mins","getMinutes","day","getDay","date","getDate","month","yr","getFullYear","document","getElementById","innerHTML","calcTime","tZone","offset","d","Date","utc","getTime","getTimezoneOffset","nd","displayInfo","obj","Math","round","main","temp","name","weatherIcon","createElement","setAttribute","weather","icon","weatherDescription","description","append","clouds","all","humidity","wind","speed","timezone","mainD","value","getCity","classList","remove","searchBtn","addEventListener","suggestedLocation","querySelectorAll","forEach","li","e","target","getLocationByCords","position","coords","latitude","toFixed","longitude","navigator","geolocation","getCurrentPosition","alert","bundleURL","getBundleURLCached","getBundleURL","Error","matches","stack","match","getBaseURL","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","href","split","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","i","length","module"],"mappings":"AGAA,ACAA,IDAIyF,ACAAU,MAAM,GDAG,ACAAC,GDAG,IAAhB,ACAoB,CAAC,cAAD,CAApB;;ADCA,ACCA,AFFA,SCCSV,ACCAW,UAAT,CAAoBC,IAApB,EAA0B,CDD1B,GAA8B;AAC5B,ACCA,MDDI,ACCAC,CDDCd,MCCM,GDDX,ACCca,EDDE,ECCE,CAACE,SAAL,EAAd;ADAEf,ADFJ,ICEIA,SAAS,GAAGE,YAAY,EAAxB;AACD,ACADY,EAAAA,OAAO,CAACE,MAAR,GAAiB,YAAY;AAC3BH,AFHJ,AFFA,IIKIA,AJLEtG,IIKE,CAACsE,EJLI,GAAG,CIKZ,iCJLJ;AGME,ACAC,AHNH,GGIE,CHJIpD,KEMGuE,MFNQ,GEMf,AFNkB,SAAdvE,WAAc,CAACC,IAAD,EAAU;AEO7B,AFNC,ADCF,IAAMlB,ECDEmB,OAAO,EDCE,CCDC,CAAC,CDCC,ICDF,EAAQ,GDCpBnB,ECDY,EAAe,KAAf,EAAsB,ADCpB,GAAwC,ECD1C,EAA6B,MAA7B,EAAqC,KAArC,EAA4C,KAA5C,CAAhB;AGMAsG,AHJA,ADD0D,EIK1DA,IHJMlF,ADDanB,GIKZ,CAACwG,AJLkD,IIK1D,AHJc,GGICJ,AHJE,CACf,GGGiB,CAACI,EHJH,EGIF,AHFb,CGEuBC,KAAV,AHJE,CGIc,CHD7B,EGCa,EAAqB,CAArB,CHJE,EAIf,CGAuC,GAA1B,EHJE,CGI8BnE,CHC7C,GGDiD,CAACoE,CHJnC,EGI8B,AHE7C,EGFF,IHJiB,EAOf,MAPe,EAQf,MARe,EASf,ADVwB,EAAgC,KCCzC,EAUf,MAVe,EAWf,MAXe,EAYf,MAZe,CAAjB;AEMF,ACDEN,AFJF,ADcE,ADhB0D,EIM1DA,EFJIpC,EEIA,AHUE5C,ADhBwBnB,CIMzB0G,CHUG,CETDlB,ADLE,AFFiD,ECgB/CxE,CCdCc,GDcG,CAACV,CGVhB,CAAgBuF,EFJI,CCKtB,ADLuB5E,GCKC,AFSX,EAAX,IGVA,CAA6BqE,IFJjB,CAAwB,EEIpC,EAAsCD,IAAI,CAACS,KFJ/B,CAAd,KEIE,wBJNoC,IAAsB;AGQ1D,ACDD,AFJD9E,ADcE,ADjB0D,MCiBpDT,ADjBoCpB,EEGpC,CAAC8B,CDcG,ADjBgD,GCiB7Cf,IAAI,CAACM,KCdpB,CAAwB,IDcT,EAAb,MCdF,EAAsC0C,KAAtC,GAA8C,EAA9C,iCFHmD,IAAS;AGS1D,AFSA,ADjBA,MGQI,AFSEzC,ADjBFrB,GCiBK,ADjBT,GCiBYe,OAAO,CAACD,IAAI,CAACQ,MAAL,EAAD,CAAnB;AERE,ACDJ,AFJA,ADcE,IGVEqF,AFJEjG,EDcEa,IETE,AFSE,GAAGT,CETDyE,ACDA,CFJG,EEIA,AHUE,CCdC,ADcA/D,CETV,EAAN,ACDJ,IHUe,ECdTd,ADcJ,WCdkB,CAAC+B,GAAD,EAAS;ACM1B,ADLD,ADcA,ADlBA,GGOA,CAEE,EFSIhB,ADlBF5B,IAAI,CGSCM,AFSE,GETT,AFSYa,CDlBD,CGSC,CHTd,EAAiB,GCkBK,CAACF,IAAI,CCdf2B,ADcgBnB,GCd5B,GDcuB,EAAD,CAAtB;AERE,ACFJ,AFHC,ADcC,ADlBEtB,CEEJ,GFFIA,ECkBI0B,CDlBD,CGSC8D,AFSE,CGXDoB,EHWI9F,IETE,AFSE,CAACa,EETA,ACFlB,CDEmB,ECFE,GDEGxB,GAAG,AFSd,CETesF,CFS1B,IETgB,EAAiBC,KAAjB,CAAuB,uBHTgB7F,IAAlD,oBAAgEF,OAAhE,SGSW,CAAd,QHTA;AIQF,AHYAiC,ADnBC,ECmBDA,CDrBA,GISI+E,GJPG,CCmBC,CAAC9E,KGZT,EAAgB,OHYhB,CACE,MADF,EAEEC,SAFF,aAEiBb,EAFjB,cAEuBE,IAFvB,gBAEiCE,GAFjC,eAEyCE,IAFzC,cAEiDE,KAFjD,cAE0DC,EAF1D;AEVE,ACDA,AFHJ,ADiBC,ADrBG1B,CCPJ,GCWM+D,AFJF/D,GAAG,CGQCwF,GDJK,GAAG,CCIZ,EAAa,MDJXzB,OAAU,GAAM,iCFJqCjE,GAApD,kBAA+DC,IAA/D,oBAA6EJ,OAA7E,kBAAH;AGSE,ACDH,AFHDkE,AFJC,EEIDA,KAAK,CAACG,KCIK2B,IDJX,CAAgB1B,KCIK,CAACuB,ADJtB,CAAuB,MCIM,CAAC,CAAD,CAAR,CAAjB,ADJJ;ACKG,ADJH,ADiBF,IAAMzD,ECjBElC,IAAI,EDiBE,CCjBC+B,EDiBE,MCjBM,CAACC,EDiBlBE,QAAW,CAACC,GCjBH,CAAwB,CDiBtB,EAAW,SCjBb,EAAsC8B,KAAnD;ACKC,ACDD6C,AFHA,ADiBA,ADrBA,EIOAA,OJPO,GIOG,CJPC1G,EIOE4G,KJPN,CAAY,IIOI,CAAC,CFHZhH,IAAZ,AFJoBK,EEIFQ,CFJC,EAAMP,EIOW,CJPjB,EAAc,GEIjC;AEIE,AFHH,ADiBC,ADrBEC,CEAJ,GFAIA,ECqBI6B,EGdA6E,CJPC,CAAC9G,ECqBI,CGdD,AJPJ,CAAL,CCqBagC,ADpBV3B,CIMSuB,GJPZ,CCqBkB,ADpBV,GCoBa,CGdD,CAACyC,EHcvB,CAF0B,CAI1B,CDtBW/D,QAAD,GIMI,CAA0B,wBAA1B,CAAZ;ADEF,ADHF,AFLY,SGQH,GAAP,CHRwBA,QAAQ,CAACC,IAAT,EAAd;AGSX,ACFG,AHgBF,ADvBU,KADR,CCwBI2B,CAAC,ADtBF7B,EIME,CHgBG,CDxBR,CAEQH,CIMC6G,CAAC,AHgBE5E,CDxBZ,EIQa,AJLV3B,CIKH,AHgBQ,EGhBQuG,AHgBlB,CGhBmB,AHWO,CAO1B,AD1BE,CAGS5G,CIKW2G,EJRpB,GIQyB,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,AHkBJ,ADvBC,GALM,CAAP,MIUQjB,MAAM,CAACH,UAAP,CAAkBmB,KAAK,CAACC,CAAD,CAAL,CAASV,IAA3B,MAAqCP,MAAM,CAACR,YAAP,EAAzC,EAAgE;ADGtE,ACFQU,AFHR,ADqBE,ADvBD,CAdD,GEgBM9B,IEGE8B,CDECL,IDLM,GAAG/D,EEGA,CDElB,ACFmBkF,CDEC9G,GAApB,CCFwB,AFHE,CCKD,ACFA+G,AFHElF,CEGH,CAAN,CAAV,WFHU,CAAwB,QAAxB,CAAlB;ACME,ACFK,AFHPqC,SCKS,ADLA,CCKC,ADLAC,KCKKnE,GAAN,EAAW4F,MDLpB,CCKS,ADLkB,CCKC,MDL5B,EAAoC7B,OAApC,uDCKS,EAA2F,IAA3F,IAAmG,GAA1G;AACD,ACFI,AFFL,ADmBE,ADtBF,IAAMtD,ECsBE2B,GAAG,GAAGF,CAAC,CAACG,CDtBC,GAAG,GCsBN,KAAcH,CAAC,ADtBvBzB,CCsBwB6B,UDtBV,CAACzC,IAAD,ECsBQ,ADtBDa,KCsByB,KAAlD,CAV0B,ADZR,CCwBlB,CDxBsCZ,GAApB,EAAyBC,IAAzB,EAAkC;ACyBpD,ADxBAH,EAAAA,WAAW,CAACC,IAAD,EAAOC,GAAP,EAAYC,IAAZ,CAAX,CACGM,IADH,CACQK,WADR,EAEGF,KAFH,CAES,UAACL,GAAD,EAAS;AGMpB0F,ACFIc,AFHJ,AFAM,IIGFA,AFHEvC,GCKC,CAACkB,MCFM,GAAG,GDEjB,CCFI,AFHmB,ECKAD,CDLGzD,QAAQ,CAACyC,QCKnC,QDL0B,CAA0B,wBAA1B,CAA1B;ACMAwB,ACFG,AFHHzB,ADqBE,ADrBIzD,GINmB,CJMnBA,CIGD,CHkBG4B,CEhBD,ACXkB,CDWjBoD,ACXN,AH2BQ,GAAG,ADrBA,CAAC/E,GCqBGuB,ADrBX,CAAYhC,CEAD,CCKjB,ADLkBmE,CDqBL,ADrBP,CCqBgBlC,CEhBDuD,AHLE,ECqBE,ECrBzB,CAA0B,ADqBE,KEhB5B,KDL2BpB,ADqBWtC,ECrBZ,EAAQ,AFA5B,ECqBO,CAAX;AGjBD,AFHCsC,ADqBA1D,ADrBG,EEAH0D,ADqBA1D,CD1BA,CEKE,CAACsD,QDqBQ,CAAC5B,EAAD,CAAX,ICrBA,CAAoB,OAApB,EAA6B,UAACiC,CAAD,EAAO;AAClCX,ADqBH,ADrBA,CCKD,ADZA,GEOIA,KAAK,CAACG,SAAN,CAAgBC,MAAhB,CAAuB,UAAvB;AEIJgD,AFHI,MEGE,CAACpB,CFHG/B,KAAK,CEGf,EFHkBU,CEGDoC,AFHE,CAACnC,MAAF,CAAS3C,CEG3B,QFHI;AACA,ADqBJ,IAAMU,WAAW,ADrBF/B,GCqBK,SAAd+B,ECrBUsB,KAAZ,EAAmBpD,EDqBH,CAAC+B,GAAD,EAAS,GCrBzB;AACD,ADqBDb,EAAAA,CCzBA,ODyBQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BC,SAA/B,aAA8CY,IAAI,CAACC,KAAL,CAC5CF,GAAG,CAACG,IAAJ,CAASC,IADmC,CAA9C;ACpBD,ADwBCjB,CC9BF,CD8BEA,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgDW,GAAG,CAACK,IAApD;ACtBF,ADwBE,MAAMC,WAAW,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,KAAvB,CAApB;AACAD,EAAAA,WAAW,CAACE,YAAZ,CACE,KADF,6CAEsCR,GAAG,CAACS,OAAJ,CAAY,CAAZ,EAAeC,IAFrD;ACxBF,AD4BEJ,EAAAA,EC5BI2B,SD4BO,CAACzB,QC5BU,GAAG,CD4BzB,CAAyB,OC5BrByB,CD4BJ,EAAmC,MAAnC,SC5ByB,CAACC,QAAD,EAAc;AACvC,AD4BA5B,EAAAA,IC5BMlD,IAAI,GAAG,AD4BF,CAACoD,CC5BZ,WD4BA,CAAyB,OAAzB,EAAkC,MAAlC;AC3BA,AD6BA,MC7BMnD,AD6BAsD,GC7BG,GAAGuB,QAAQ,CAACC,GD6BG,GC7BZ,AD6BehD,CC7BCiD,OD6BO,CC7BvB,AD6BwB7B,CC7BC8B,OAAzB,CAAiC,CAAjC,CAAZ,ED6B2B,CAAuB,MAAvB,CAA3B;AC5BA,AD6BA1B,EAAAA,IC7BMrD,IAAI,GAAG4E,OD6BK,CC7BG,AD6BF7C,CC7BG8C,MAAT,CAAgBG,CD6B7B,QC7Ba,CAA0BD,ID6BLrC,GC7BrB,AD6BwB,CC7BU,AD6BTS,CC7BzB,CAAb,KD6BkC,CAAY,CAAZ,EAAeG,WAAjD;AC5BA,AD8BAzB,EAAAA,QAAQ,CAACC,cAAT,CAAwB,CC9BZhC,IAAZ,EAAkBa,OD8BlB,EAAwCoB,EC9BxC,EAA+BhC,GAA/B,EAAoCC,AD8BpC,GAAoD,CC9BpD,CD8BA;AC7BD,AD8BC6B,CCnCF,CDmCEA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,SAAxC,GAAoD,EAApD;AAEAF,EAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCyB,MAAxC,CAA+CP,WAA/C;AC9BF,AD+BEnB,EAAAA,EC/BEoD,MD+BM,CAACnD,EC/BE,CAACoD,WAAd,AD+BE,CAAwB,CC/BC,aD+BzB,EAAwC3B,MAAxC,CAA+CF,kBAA/C;AC9BA4B,ADgCApD,EChCAoD,ADgCApD,QAAQ,CChCC,ADgCAC,CChCCoD,WAAV,CAAsBC,CDgCtB,CAAwB,QAAxB,EAAkCpD,MChClC,CAAyC4C,EDgCzC,aAAiDjC,GChCjD,ADgCoD,CAACc,MAAJ,CAAWC,GAA5D;AC/BD,ADgCC5B,CClCF,CDkCEA,KChCK,GDgCG,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,aAAmDW,GAAG,CAACG,IAAJ,CAASa,QAA5D;AC/BA,ADgCA7B,EAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,aAA+CW,GAAG,CAACiB,IAAJ,CAASC,KAAxD;AC/BAwB,ADiCApD,ECjCAoD,ADiCApD,KCjCK,CAAC,EDiCE,CAACU,GAAG,CAACmB,QAAL,CAAR,8CCjCK,CAAL;AACD,ADiCA,CA7BD;;eA+BepB","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["const API_KEY = 'b8aa6b77e85dc3ac3f6db7694ca0e9ea';\n\nconst getCityData = (city = '', lat = 9.08, long = 8.68) => {\n  let url;\n  if (city !== '') {\n    url = `//api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;\n  } else {\n    url = `//api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${API_KEY}&units=metric`;\n  }\n\n  return new Promise((res, err) => {\n    fetch(url)\n      .then((response) => response.json())\n      .then(res)\n      .catch(err);\n  });\n};\n\nconst getCityInfo = (city, displayData, lat, long) => {\n  getCityData(city, lat, long)\n    .then(displayData)\n    .catch((err) => {\n      // eslint-disable-next-line no-console\n      console.log(err, 'City not Found!!!');\n    });\n};\n\nexport default getCityInfo;\n","const displayTime = (time) => {\n  const dateArr = ['Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat'];\n\n  const monthArr = [\n    'Jan.',\n    'Feb.',\n    'Mar.',\n    'Apr.',\n    'May',\n    'Jun.',\n    'July',\n    'Aug.',\n    'Sept.',\n    'Oct.',\n    'Nov.',\n    'Dec.',\n  ];\n\n  const hr = time.getHours();\n  const mins = time.getMinutes();\n  const day = dateArr[time.getDay()];\n  const date = time.getDate();\n  const month = monthArr[time.getDay()];\n  const yr = time.getFullYear();\n\n  document.getElementById(\n    'date',\n  ).innerHTML = `${hr}:${mins} - ${day}, ${date} ${month} ${yr}`;\n};\n\nconst calcTime = (tZone) => {\n  // offset in hours\n  const offset = tZone / 3600;\n\n  // create Date object for current location\n  const d = new Date();\n\n  // convert to msec\n  // add local time zone offset\n  // get UTC time in msec\n  const utc = d.getTime() + d.getTimezoneOffset() * 60000;\n\n  // create new Date object for different city\n  // using supplied offset\n  const nd = new Date(utc + 3600000 * offset);\n  displayTime(nd);\n};\n\nconst displayInfo = (obj) => {\n  document.getElementById('deg').innerHTML = `${Math.round(\n    obj.main.temp,\n  )}<sup class=\"text-sm font-light\">0</sup>`;\n\n  document.getElementById('location').innerHTML = obj.name;\n\n  const weatherIcon = document.createElement('img');\n  weatherIcon.setAttribute(\n    'src',\n    `http://openweathermap.org/img/wn/${obj.weather[0].icon}.png`,\n  );\n  weatherIcon.setAttribute('height', '35px');\n  weatherIcon.setAttribute('width', '35px');\n\n  const weatherDescription = document.createElement('span');\n  weatherDescription.innerHTML = `${obj.weather[0].description}`;\n\n  document.getElementById('weather_cont').innerHTML = '';\n  document.getElementById('weather_cont').innerHTML = '';\n\n  document.getElementById('weather_cont').append(weatherIcon);\n  document.getElementById('weather_cont').append(weatherDescription);\n\n  document.getElementById('cloudy').innerHTML = `${obj.clouds.all}%`;\n  document.getElementById('humidity').innerHTML = `${obj.main.humidity}%`;\n  document.getElementById('wind').innerHTML = `${obj.wind.speed}km/h`;\n\n  calcTime(obj.timezone);\n};\n\nexport default displayInfo;\n","import './styles/main.css';\nimport getCityInfo from './js/getWeather';\nimport displayInfo from './js/displayInfo';\n\nconst mainD = document.getElementById('main-details');\ndocument.getElementById('city_input').value = '';\n\nconst displayData = (obj) => {\n  displayInfo(obj);\n};\n\nconst getCity = () => {\n  mainD.classList.remove('side-nav');\n  const city = document.getElementById('city_input').value;\n  getCityInfo(city, displayData);\n};\n\n/* ----------------CLICKING ON THE SEARCH BUTTON ------------------------------*/\nconst searchBtn = document.getElementById('search');\nsearchBtn.addEventListener('click', getCity);\n\n/* ---------------CLICKING ON THE SUGGESTED LOCATIONS -------------------------*/\nconst suggestedLocation = document.querySelectorAll('.suggested-location li');\nsuggestedLocation.forEach((li) => {\n  li.addEventListener('click', (e) => {\n    mainD.classList.remove('side-nav');\n    const value = e.target.innerHTML;\n    getCityInfo(value, displayData);\n  });\n});\n\n/* --------------------GETTING USER LOCATION ----------------------------------*/\nconst getLocationByCords = (position) => {\n  const city = '';\n  const lat = position.coords.latitude.toFixed(2);\n  const long = position.coords.longitude.toFixed(2);\n  getCityInfo(city, displayData, lat, long);\n};\n\nif (navigator.geolocation) {\n  navigator.geolocation.getCurrentPosition(getLocationByCords);\n} else {\n  // eslint-disable-next-line no-alert\n  alert('Geolocation is not supported by this browser or is disabled.');\n}\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}